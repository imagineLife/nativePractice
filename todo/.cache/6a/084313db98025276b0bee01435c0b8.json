{"id":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","dependencies":[{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/package.json","includedInParent":true,"mtime":1550318843000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/.babelrc","includedInParent":true,"mtime":1550318529000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/package.json","includedInParent":true,"mtime":1549937780000},{"name":"react-is","loc":{"line":7,"column":23},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/react-is/index.js"},{"name":"../utils/invariant","loc":{"line":9,"column":25},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/utils/invariant.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n\n  routeNames.forEach(routeName => {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !(0, _reactIs.isValidElementType)(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(`Route '${routeName}' should declare a screen or a getScreen, not both.`);\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexports.default = validateRouteConfigMap;","map":{"mappings":[{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n\n  routeNames.forEach(routeName => {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !(0, _reactIs.isValidElementType)(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(`Route '${routeName}' should declare a screen or a getScreen, not both.`);\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexports.default = validateRouteConfigMap;"},"lineCount":57}},"hash":"eeaf8b54dffb2a284028a23d11d847e5","cacheData":{"env":{}}}