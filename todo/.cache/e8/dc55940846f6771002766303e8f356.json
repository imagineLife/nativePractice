{"id":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","dependencies":[{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/package.json","includedInParent":true,"mtime":1550318843000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/.babelrc","includedInParent":true,"mtime":1550318529000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/package.json","includedInParent":true,"mtime":1549937780000},{"name":"path-to-regexp","loc":{"line":10,"column":28},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/pathUtils.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/path-to-regexp/index.js"},{"name":"../NavigationActions","loc":{"line":14,"column":33},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/pathUtils.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/NavigationActions.js"},{"name":"../utils/invariant","loc":{"line":18,"column":25},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/pathUtils.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/utils/invariant.js"},{"name":"query-string","loc":{"line":24,"column":26},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/pathUtils.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/query-string/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathParser = exports.urlToPathAndParams = exports.getParamsFromPath = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable import/no-commonjs */\n\nvar _pathToRegexp = require('path-to-regexp');\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nvar _NavigationActions = require('../NavigationActions');\n\nvar _NavigationActions2 = _interopRequireDefault(_NavigationActions);\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar queryString = require('query-string');\n\nvar getParamsFromPath = exports.getParamsFromPath = (inputParams, pathMatch, pathMatchKeys) => {\n  var params = pathMatch.slice(1).reduce(\n  // iterate over matched path params\n  (paramsOut, matchResult, i) => {\n    var key = pathMatchKeys[i];\n    if (!key || key.asterisk) {\n      return paramsOut;\n    }\n    var paramName = key.name;\n\n    var decodedMatchResult = void 0;\n    if (matchResult) {\n      try {\n        decodedMatchResult = decodeURIComponent(matchResult);\n      } catch (e) {\n        // ignore `URIError: malformed URI`\n      }\n    }\n\n    paramsOut[paramName] = decodedMatchResult || matchResult;\n    return paramsOut;\n  }, _extends({}, inputParams));\n  return params;\n};\nvar getRestOfPath = (pathMatch, pathMatchKeys) => {\n  var rest = pathMatch[pathMatchKeys.findIndex(k => k.asterisk) + 1];\n  return rest;\n};\n\nvar urlToPathAndParams = exports.urlToPathAndParams = (url, uriPrefix) => {\n  var searchMatch = url.match(/^(.*)\\?(.*)$/);\n  var params = searchMatch ? queryString.parse(searchMatch[2]) : {};\n  var urlWithoutSearch = searchMatch ? searchMatch[1] : url;\n  var delimiter = uriPrefix || '://';\n  var path = urlWithoutSearch.split(delimiter)[1];\n  if (path === undefined) {\n    path = urlWithoutSearch;\n  }\n  if (path === '/') {\n    path = '';\n  }\n  if (path[path.length - 1] === '/') {\n    path = path.slice(0, -1);\n  }\n  return {\n    path,\n    params\n  };\n};\n\nvar createPathParser = exports.createPathParser = (childRouters, routeConfigs, { paths: pathConfigs = {}, disableRouteNamePaths }) => {\n  var pathsByRouteNames = {};\n  var paths = [];\n\n  // Build pathsByRouteNames, which includes a regex to match paths for each route. Keep in mind, the regex will pass for the route and all child routes. The code that uses pathsByRouteNames will need to also verify that the child router produces an action, in the case of isPathMatchable false (a null path).\n  Object.keys(childRouters).forEach(routeName => {\n    var pathPattern = void 0;\n\n    // First check for paths on the router, then check the route config\n    if (pathConfigs[routeName] !== undefined) {\n      pathPattern = pathConfigs[routeName];\n    } else {\n      pathPattern = routeConfigs[routeName].path;\n    }\n\n    if (pathPattern === undefined) {\n      // If the user hasn't specified a path at all nor disableRouteNamePaths, then we assume the routeName is an appropriate path\n      pathPattern = disableRouteNamePaths ? null : routeName;\n    }\n\n    (0, _invariant2.default)(pathPattern === null || typeof pathPattern === 'string', `Route path for ${routeName} must be specified as a string, or null.`);\n\n    // the path may be specified as null, which is similar to empty string because it allows child routers to handle the action, but it will not match empty paths\n    var isPathMatchable = pathPattern !== null;\n    // pathPattern is a string with inline params, such as people/:id/*foo\n    var exactReKeys = [];\n    var exactRe = isPathMatchable ? (0, _pathToRegexp2.default)(pathPattern, exactReKeys) : null;\n    var extendedPathReKeys = [];\n    var isWildcard = pathPattern === '' || !isPathMatchable;\n    var extendedPathRe = (0, _pathToRegexp2.default)(isWildcard ? '*' : `${pathPattern}/*`, extendedPathReKeys);\n\n    pathsByRouteNames[routeName] = {\n      exactRe,\n      exactReKeys,\n      extendedPathRe,\n      extendedPathReKeys,\n      isWildcard,\n      toPath: pathPattern === null ? () => '' : (0, _pathToRegexp.compile)(pathPattern)\n    };\n  });\n\n  paths = Object.entries(pathsByRouteNames);\n\n  var getActionForPathAndParams = (pathToResolve = '', inputParams = {}) => {\n    // Attempt to match `pathToResolve` with a route in this router's routeConfigs, deferring to child routers\n\n    for (var [routeName, path] of paths) {\n      var { exactRe, exactReKeys, extendedPathRe, extendedPathReKeys } = path;\n      var childRouter = childRouters[routeName];\n\n      var exactMatch = exactRe && exactRe.exec(pathToResolve);\n\n      if (exactMatch && exactMatch.length) {\n        var extendedMatch = extendedPathRe && extendedPathRe.exec(pathToResolve);\n        var childAction = null;\n        if (extendedMatch && childRouter) {\n          var restOfPath = getRestOfPath(extendedMatch, extendedPathReKeys);\n          childAction = childRouter.getActionForPathAndParams(restOfPath, inputParams);\n        }\n\n        return _NavigationActions2.default.navigate({\n          routeName,\n          params: getParamsFromPath(inputParams, exactMatch, exactReKeys),\n          action: childAction\n        });\n      }\n    }\n\n    for (var [_routeName, _path] of paths) {\n      var { extendedPathRe: _extendedPathRe, extendedPathReKeys: _extendedPathReKeys } = _path;\n      var _childRouter = childRouters[_routeName];\n\n      var _extendedMatch = _extendedPathRe && _extendedPathRe.exec(pathToResolve);\n\n      if (_extendedMatch && _extendedMatch.length) {\n        var _restOfPath = getRestOfPath(_extendedMatch, _extendedPathReKeys);\n        var _childAction = null;\n        if (_childRouter) {\n          _childAction = _childRouter.getActionForPathAndParams(_restOfPath, inputParams);\n        }\n        if (!_childAction) {\n          continue;\n        }\n        return _NavigationActions2.default.navigate({\n          routeName: _routeName,\n          params: getParamsFromPath(inputParams, _extendedMatch, _extendedPathReKeys),\n          action: _childAction\n        });\n      }\n    }\n\n    return null;\n  };\n  var getPathAndParamsForRoute = route => {\n    var { routeName, params } = route;\n    var childRouter = childRouters[routeName];\n    var { toPath, exactReKeys } = pathsByRouteNames[routeName];\n    var subPath = toPath(params);\n    var nonPathParams = {};\n    if (params) {\n      Object.keys(params).filter(paramName => !exactReKeys.find(k => k.name === paramName)).forEach(paramName => {\n        nonPathParams[paramName] = params[paramName];\n      });\n    }\n    if (childRouter) {\n      // If it has a router it's a navigator.\n      // If it doesn't have router it's an ordinary React component.\n      var child = childRouter.getPathAndParamsForState(route);\n      return {\n        path: subPath ? `${subPath}/${child.path}` : child.path,\n        params: child.params ? _extends({}, nonPathParams, child.params) : nonPathParams\n      };\n    }\n    return {\n      path: subPath,\n      params: nonPathParams\n    };\n  };\n  return { getActionForPathAndParams, getPathAndParamsForRoute };\n};","map":{"mappings":[{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/pathUtils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}}],"sources":{"node_modules/@react-navigation/core/dist/routers/pathUtils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathParser = exports.urlToPathAndParams = exports.getParamsFromPath = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable import/no-commonjs */\n\nvar _pathToRegexp = require('path-to-regexp');\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nvar _NavigationActions = require('../NavigationActions');\n\nvar _NavigationActions2 = _interopRequireDefault(_NavigationActions);\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar queryString = require('query-string');\n\nvar getParamsFromPath = exports.getParamsFromPath = (inputParams, pathMatch, pathMatchKeys) => {\n  var params = pathMatch.slice(1).reduce(\n  // iterate over matched path params\n  (paramsOut, matchResult, i) => {\n    var key = pathMatchKeys[i];\n    if (!key || key.asterisk) {\n      return paramsOut;\n    }\n    var paramName = key.name;\n\n    var decodedMatchResult = void 0;\n    if (matchResult) {\n      try {\n        decodedMatchResult = decodeURIComponent(matchResult);\n      } catch (e) {\n        // ignore `URIError: malformed URI`\n      }\n    }\n\n    paramsOut[paramName] = decodedMatchResult || matchResult;\n    return paramsOut;\n  }, _extends({}, inputParams));\n  return params;\n};\nvar getRestOfPath = (pathMatch, pathMatchKeys) => {\n  var rest = pathMatch[pathMatchKeys.findIndex(k => k.asterisk) + 1];\n  return rest;\n};\n\nvar urlToPathAndParams = exports.urlToPathAndParams = (url, uriPrefix) => {\n  var searchMatch = url.match(/^(.*)\\?(.*)$/);\n  var params = searchMatch ? queryString.parse(searchMatch[2]) : {};\n  var urlWithoutSearch = searchMatch ? searchMatch[1] : url;\n  var delimiter = uriPrefix || '://';\n  var path = urlWithoutSearch.split(delimiter)[1];\n  if (path === undefined) {\n    path = urlWithoutSearch;\n  }\n  if (path === '/') {\n    path = '';\n  }\n  if (path[path.length - 1] === '/') {\n    path = path.slice(0, -1);\n  }\n  return {\n    path,\n    params\n  };\n};\n\nvar createPathParser = exports.createPathParser = (childRouters, routeConfigs, { paths: pathConfigs = {}, disableRouteNamePaths }) => {\n  var pathsByRouteNames = {};\n  var paths = [];\n\n  // Build pathsByRouteNames, which includes a regex to match paths for each route. Keep in mind, the regex will pass for the route and all child routes. The code that uses pathsByRouteNames will need to also verify that the child router produces an action, in the case of isPathMatchable false (a null path).\n  Object.keys(childRouters).forEach(routeName => {\n    var pathPattern = void 0;\n\n    // First check for paths on the router, then check the route config\n    if (pathConfigs[routeName] !== undefined) {\n      pathPattern = pathConfigs[routeName];\n    } else {\n      pathPattern = routeConfigs[routeName].path;\n    }\n\n    if (pathPattern === undefined) {\n      // If the user hasn't specified a path at all nor disableRouteNamePaths, then we assume the routeName is an appropriate path\n      pathPattern = disableRouteNamePaths ? null : routeName;\n    }\n\n    (0, _invariant2.default)(pathPattern === null || typeof pathPattern === 'string', `Route path for ${routeName} must be specified as a string, or null.`);\n\n    // the path may be specified as null, which is similar to empty string because it allows child routers to handle the action, but it will not match empty paths\n    var isPathMatchable = pathPattern !== null;\n    // pathPattern is a string with inline params, such as people/:id/*foo\n    var exactReKeys = [];\n    var exactRe = isPathMatchable ? (0, _pathToRegexp2.default)(pathPattern, exactReKeys) : null;\n    var extendedPathReKeys = [];\n    var isWildcard = pathPattern === '' || !isPathMatchable;\n    var extendedPathRe = (0, _pathToRegexp2.default)(isWildcard ? '*' : `${pathPattern}/*`, extendedPathReKeys);\n\n    pathsByRouteNames[routeName] = {\n      exactRe,\n      exactReKeys,\n      extendedPathRe,\n      extendedPathReKeys,\n      isWildcard,\n      toPath: pathPattern === null ? () => '' : (0, _pathToRegexp.compile)(pathPattern)\n    };\n  });\n\n  paths = Object.entries(pathsByRouteNames);\n\n  var getActionForPathAndParams = (pathToResolve = '', inputParams = {}) => {\n    // Attempt to match `pathToResolve` with a route in this router's routeConfigs, deferring to child routers\n\n    for (var [routeName, path] of paths) {\n      var { exactRe, exactReKeys, extendedPathRe, extendedPathReKeys } = path;\n      var childRouter = childRouters[routeName];\n\n      var exactMatch = exactRe && exactRe.exec(pathToResolve);\n\n      if (exactMatch && exactMatch.length) {\n        var extendedMatch = extendedPathRe && extendedPathRe.exec(pathToResolve);\n        var childAction = null;\n        if (extendedMatch && childRouter) {\n          var restOfPath = getRestOfPath(extendedMatch, extendedPathReKeys);\n          childAction = childRouter.getActionForPathAndParams(restOfPath, inputParams);\n        }\n\n        return _NavigationActions2.default.navigate({\n          routeName,\n          params: getParamsFromPath(inputParams, exactMatch, exactReKeys),\n          action: childAction\n        });\n      }\n    }\n\n    for (var [_routeName, _path] of paths) {\n      var { extendedPathRe: _extendedPathRe, extendedPathReKeys: _extendedPathReKeys } = _path;\n      var _childRouter = childRouters[_routeName];\n\n      var _extendedMatch = _extendedPathRe && _extendedPathRe.exec(pathToResolve);\n\n      if (_extendedMatch && _extendedMatch.length) {\n        var _restOfPath = getRestOfPath(_extendedMatch, _extendedPathReKeys);\n        var _childAction = null;\n        if (_childRouter) {\n          _childAction = _childRouter.getActionForPathAndParams(_restOfPath, inputParams);\n        }\n        if (!_childAction) {\n          continue;\n        }\n        return _NavigationActions2.default.navigate({\n          routeName: _routeName,\n          params: getParamsFromPath(inputParams, _extendedMatch, _extendedPathReKeys),\n          action: _childAction\n        });\n      }\n    }\n\n    return null;\n  };\n  var getPathAndParamsForRoute = route => {\n    var { routeName, params } = route;\n    var childRouter = childRouters[routeName];\n    var { toPath, exactReKeys } = pathsByRouteNames[routeName];\n    var subPath = toPath(params);\n    var nonPathParams = {};\n    if (params) {\n      Object.keys(params).filter(paramName => !exactReKeys.find(k => k.name === paramName)).forEach(paramName => {\n        nonPathParams[paramName] = params[paramName];\n      });\n    }\n    if (childRouter) {\n      // If it has a router it's a navigator.\n      // If it doesn't have router it's an ordinary React component.\n      var child = childRouter.getPathAndParamsForState(route);\n      return {\n        path: subPath ? `${subPath}/${child.path}` : child.path,\n        params: child.params ? _extends({}, nonPathParams, child.params) : nonPathParams\n      };\n    }\n    return {\n      path: subPath,\n      params: nonPathParams\n    };\n  };\n  return { getActionForPathAndParams, getPathAndParamsForRoute };\n};"},"lineCount":195}},"hash":"cd5bc319976aff3d86da2ce1306b181e","cacheData":{"env":{}}}