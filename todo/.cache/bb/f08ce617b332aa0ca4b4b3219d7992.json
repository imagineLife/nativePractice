{"id":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","dependencies":[{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/package.json","includedInParent":true,"mtime":1550318843000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/.babelrc","includedInParent":true,"mtime":1550318529000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/package.json","includedInParent":true,"mtime":1549937780000},{"name":"react-is","loc":{"line":8,"column":23},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/react-is/index.js"},{"name":"../utils/invariant","loc":{"line":10,"column":25},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/utils/invariant.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScreenForRouteName;\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nfunction getScreenForRouteName(routeConfigs, routeName) {\n  var routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(`There is no route defined for key ${routeName}.\\n` + `Must be one of: ${Object.keys(routeConfigs).map(a => `'${a}'`).join(',')}`);\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    var screen = routeConfig.getScreen();\n    (0, _invariant2.default)((0, _reactIs.isValidElementType)(screen), `The getScreen defined for route '${routeName} didn't return a valid ` + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`);\n    return screen;\n  }\n\n  return routeConfig;\n}","map":{"mappings":[{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScreenForRouteName;\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nfunction getScreenForRouteName(routeConfigs, routeName) {\n  var routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(`There is no route defined for key ${routeName}.\\n` + `Must be one of: ${Object.keys(routeConfigs).map(a => `'${a}'`).join(',')}`);\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    var screen = routeConfig.getScreen();\n    (0, _invariant2.default)((0, _reactIs.isValidElementType)(screen), `The getScreen defined for route '${routeName} didn't return a valid ` + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`);\n    return screen;\n  }\n\n  return routeConfig;\n}"},"lineCount":38}},"hash":"d69c82e98f2f9daac846d79cd899e5c0","cacheData":{"env":{}}}