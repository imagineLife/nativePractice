{"id":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","dependencies":[{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/package.json","includedInParent":true,"mtime":1550318843000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/.babelrc","includedInParent":true,"mtime":1550318529000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/package.json","includedInParent":true,"mtime":1549937780000},{"name":"../NavigationActions","loc":{"line":9,"column":33},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/NavigationActions.js"},{"name":"./StackActions","loc":{"line":13,"column":28},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackActions.js"},{"name":"./createConfigGetter","loc":{"line":17,"column":34},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/createConfigGetter.js"},{"name":"./getScreenForRouteName","loc":{"line":21,"column":37},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js"},{"name":"../StateUtils","loc":{"line":25,"column":26},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/StateUtils.js"},{"name":"./validateRouteConfigMap","loc":{"line":29,"column":38},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js"},{"name":"../utils/invariant","loc":{"line":33,"column":25},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/utils/invariant.js"},{"name":"./KeyGenerator","loc":{"line":37,"column":28},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/KeyGenerator.js"},{"name":"./pathUtils","loc":{"line":39,"column":25},"parent":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/StackRouter.js","resolved":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/dist/routers/pathUtils.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _NavigationActions = require('../NavigationActions');\n\nvar _NavigationActions2 = _interopRequireDefault(_NavigationActions);\n\nvar _StackActions = require('./StackActions');\n\nvar _StackActions2 = _interopRequireDefault(_StackActions);\n\nvar _createConfigGetter = require('./createConfigGetter');\n\nvar _createConfigGetter2 = _interopRequireDefault(_createConfigGetter);\n\nvar _getScreenForRouteName = require('./getScreenForRouteName');\n\nvar _getScreenForRouteName2 = _interopRequireDefault(_getScreenForRouteName);\n\nvar _StateUtils = require('../StateUtils');\n\nvar _StateUtils2 = _interopRequireDefault(_StateUtils);\n\nvar _validateRouteConfigMap = require('./validateRouteConfigMap');\n\nvar _validateRouteConfigMap2 = _interopRequireDefault(_validateRouteConfigMap);\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _KeyGenerator = require('./KeyGenerator');\n\nvar _pathUtils = require('./pathUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction behavesLikePushAction(action) {\n  return action.type === _NavigationActions2.default.NAVIGATE || action.type === _StackActions2.default.PUSH;\n}\n\nvar defaultActionCreators = () => ({});\n\nfunction isResetToRootStack(action) {\n  return action.type === _StackActions2.default.RESET && action.key === null;\n}\n\nexports.default = (routeConfigs, stackConfig = {}) => {\n  // Fail fast on invalid route definitions\n  (0, _validateRouteConfigMap2.default)(routeConfigs);\n\n  var childRouters = {};\n  var routeNames = Object.keys(routeConfigs);\n\n  // Loop through routes and find child routers\n  routeNames.forEach(routeName => {\n    var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);\n    if (screen && screen.router) {\n      // If it has a router it's a navigator.\n      childRouters[routeName] = screen.router;\n    } else {\n      // If it doesn't have router it's an ordinary React component.\n      childRouters[routeName] = null;\n    }\n  });\n\n  var { initialRouteParams } = stackConfig;\n  var getCustomActionCreators = stackConfig.getCustomActionCreators || defaultActionCreators;\n\n  var initialRouteName = stackConfig.initialRouteName || routeNames[0];\n\n  var initialChildRouter = childRouters[initialRouteName];\n\n  function getInitialState(action) {\n    var route = {};\n    var childRouter = childRouters[action.routeName];\n\n    // This is a push-like action, and childRouter will be a router or null if we are responsible for this routeName\n    if (behavesLikePushAction(action) && childRouter !== undefined) {\n      var childState = {};\n      // The router is null for normal leaf routes\n      if (childRouter !== null) {\n        var childAction = action.action || _NavigationActions2.default.init({ params: action.params });\n        childState = childRouter.getStateForAction(childAction);\n      }\n\n      return {\n        key: 'StackRouterRoot',\n        isTransitioning: false,\n        index: 0,\n        routes: [_extends({\n          params: action.params\n        }, childState, {\n          key: action.key || (0, _KeyGenerator.generateKey)(),\n          routeName: action.routeName\n        })]\n      };\n    }\n\n    if (initialChildRouter) {\n      route = initialChildRouter.getStateForAction(_NavigationActions2.default.navigate({\n        routeName: initialRouteName,\n        params: initialRouteParams\n      }));\n    }\n    var params = (routeConfigs[initialRouteName].params || route.params || action.params || initialRouteParams) && _extends({}, routeConfigs[initialRouteName].params || {}, route.params || {}, action.params || {}, initialRouteParams || {});\n    var { initialRouteKey } = stackConfig;\n    route = _extends({}, route, params ? { params } : {}, {\n      routeName: initialRouteName,\n      key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()\n    });\n    return {\n      key: 'StackRouterRoot',\n      isTransitioning: false,\n      index: 0,\n      routes: [route]\n    };\n  }\n\n  function getParamsForRouteAndAction(routeName, action) {\n    var routeConfig = routeConfigs[routeName];\n    if (routeConfig && routeConfig.params) {\n      return _extends({}, routeConfig.params, action.params);\n    } else {\n      return action.params;\n    }\n  }\n\n  var {\n    getPathAndParamsForRoute,\n    getActionForPathAndParams\n  } = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, stackConfig);\n\n  return {\n    childRouters,\n\n    getComponentForState(state) {\n      var activeChildRoute = state.routes[state.index];\n      var { routeName } = activeChildRoute;\n      if (childRouters[routeName]) {\n        return childRouters[routeName].getComponentForState(activeChildRoute);\n      }\n      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);\n    },\n\n    getComponentForRouteName(routeName) {\n      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);\n    },\n\n    getActionCreators(route, navStateKey) {\n      return _extends({}, getCustomActionCreators(route, navStateKey), {\n        pop: (n, params) => _StackActions2.default.pop(_extends({\n          n\n        }, params)),\n        popToTop: params => _StackActions2.default.popToTop(params),\n        push: (routeName, params, action) => _StackActions2.default.push({\n          routeName,\n          params,\n          action\n        }),\n        replace: (replaceWith, params, action, newKey) => {\n          if (typeof replaceWith === 'string') {\n            return _StackActions2.default.replace({\n              routeName: replaceWith,\n              params,\n              action,\n              key: route.key,\n              newKey\n            });\n          }\n          (0, _invariant2.default)(typeof replaceWith === 'object', 'Must replaceWith an object or a string');\n          (0, _invariant2.default)(params == null, 'Params must not be provided to .replace() when specifying an object');\n          (0, _invariant2.default)(action == null, 'Child action must not be provided to .replace() when specifying an object');\n          (0, _invariant2.default)(newKey == null, 'Child action must not be provided to .replace() when specifying an object');\n          return _StackActions2.default.replace(replaceWith);\n        },\n        reset: (actions, index) => _StackActions2.default.reset({\n          actions,\n          index: index == null ? actions.length - 1 : index,\n          key: navStateKey\n        }),\n        dismiss: () => _NavigationActions2.default.back({\n          key: navStateKey\n        })\n      });\n    },\n\n    getStateForAction(action, state) {\n      // Set up the initial state if needed\n      if (!state) {\n        return getInitialState(action);\n      }\n\n      var activeChildRoute = state.routes[state.index];\n\n      if (!isResetToRootStack(action) && action.type !== _NavigationActions2.default.NAVIGATE) {\n        // Let the active child router handle the action\n        var activeChildRouter = childRouters[activeChildRoute.routeName];\n        if (activeChildRouter) {\n          var route = activeChildRouter.getStateForAction(action, activeChildRoute);\n          if (route !== null && route !== activeChildRoute) {\n            return _StateUtils2.default.replaceAt(state, activeChildRoute.key, route,\n            // the following tells replaceAt to NOT change the index to this route for the setParam action, because people don't expect param-setting actions to switch the active route\n            action.type === _NavigationActions2.default.SET_PARAMS);\n          }\n        }\n      } else if (action.type === _NavigationActions2.default.NAVIGATE) {\n        // Traverse routes from the top of the stack to the bottom, so the\n        // active route has the first opportunity, then the one before it, etc.\n\n        for (var childRoute of state.routes.slice().reverse()) {\n          var childRouter = childRouters[childRoute.routeName];\n          var childAction = action.routeName === childRoute.routeName && action.action ? action.action : action;\n\n          if (childRouter) {\n            var nextRouteState = childRouter.getStateForAction(childAction, childRoute);\n\n            if (nextRouteState === null || nextRouteState !== childRoute) {\n              var newState = _StateUtils2.default.replaceAndPrune(state, nextRouteState ? nextRouteState.key : childRoute.key, nextRouteState ? nextRouteState : childRoute);\n              return _extends({}, newState, {\n                isTransitioning: state.index !== newState.index ? action.immediate !== true : state.isTransitioning\n              });\n            }\n          }\n        }\n      }\n\n      // Handle push and navigate actions. This must happen after the focused\n      // child router has had a chance to handle the action.\n      if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined // undefined means it's not a childRouter or a screen\n      ) {\n          var _childRouter = childRouters[action.routeName];\n          var _route = void 0;\n\n          (0, _invariant2.default)(action.type !== _StackActions2.default.PUSH || action.key == null, 'StackRouter does not support key on the push action');\n\n          // Before pushing a new route we first try to find one in the existing route stack\n          // More information on this: https://github.com/react-navigation/rfcs/blob/master/text/0004-less-pushy-navigate.md\n          var lastRouteIndex = state.routes.findIndex(r => {\n            if (action.key) {\n              return r.key === action.key;\n            } else {\n              return r.routeName === action.routeName;\n            }\n          });\n\n          // An instance of this route exists already and we're dealing with a navigate action\n          if (action.type !== _StackActions2.default.PUSH && lastRouteIndex !== -1) {\n            // If index is unchanged and params are not being set, leave state identity intact\n            if (state.index === lastRouteIndex && !action.params) {\n              return null;\n            }\n\n            // Remove the now unused routes at the tail of the routes array\n            var routes = state.routes.slice(0, lastRouteIndex + 1);\n\n            // Apply params if provided, otherwise leave route identity intact\n            if (action.params) {\n              var _route2 = state.routes[lastRouteIndex];\n              routes[lastRouteIndex] = _extends({}, _route2, {\n                params: _extends({}, _route2.params, action.params)\n              });\n            }\n            // Return state with new index. Change isTransitioning only if index has changed\n            return _extends({}, state, {\n              isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : state.isTransitioning,\n              index: lastRouteIndex,\n              routes\n            });\n          }\n\n          if (_childRouter) {\n            // Delegate to the child router with the given action, or init it\n            var _childAction = action.action || _NavigationActions2.default.init({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            });\n            _route = _extends({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            }, _childRouter.getStateForAction(_childAction), {\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            });\n          } else {\n            // Create the route from scratch\n            _route = {\n              params: getParamsForRouteAndAction(action.routeName, action),\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            };\n          }\n          return _extends({}, _StateUtils2.default.push(state, _route), {\n            isTransitioning: action.immediate !== true\n          });\n        } else if (action.type === _StackActions2.default.PUSH && childRouters[action.routeName] === undefined) {\n        // Return the state identity to bubble the action up\n        return state;\n      }\n\n      // Handle navigation to other child routers that are not yet pushed\n      if (behavesLikePushAction(action)) {\n        var childRouterNames = Object.keys(childRouters);\n        for (var i = 0; i < childRouterNames.length; i++) {\n          var childRouterName = childRouterNames[i];\n          var _childRouter2 = childRouters[childRouterName];\n          if (_childRouter2) {\n            // For each child router, start with a blank state\n            var initChildRoute = _childRouter2.getStateForAction(_NavigationActions2.default.init());\n            // Then check to see if the router handles our navigate action\n            var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);\n            var routeToPush = null;\n            if (navigatedChildRoute === null) {\n              // Push the route if the router has 'handled' the action and returned null\n              routeToPush = initChildRoute;\n            } else if (navigatedChildRoute !== initChildRoute) {\n              // Push the route if the state has changed in response to this navigation\n              routeToPush = navigatedChildRoute;\n            }\n            if (routeToPush) {\n              var _route3 = _extends({}, routeToPush, {\n                routeName: childRouterName,\n                key: action.key || (0, _KeyGenerator.generateKey)()\n              });\n              return _extends({}, _StateUtils2.default.push(state, _route3), {\n                isTransitioning: action.immediate !== true\n              });\n            }\n          }\n        }\n      }\n\n      // Handle pop-to-top behavior. Make sure this happens after children have had a chance to handle the action, so that the inner stack pops to top first.\n      if (action.type === _StackActions2.default.POP_TO_TOP) {\n        // Refuse to handle pop to top if a key is given that doesn't correspond\n        // to this router\n        if (action.key && state.key !== action.key) {\n          return state;\n        }\n\n        // If we're already at the top, then we return the state with a new\n        // identity so that the action is handled by this router.\n        if (state.index > 0) {\n          return _extends({}, state, {\n            isTransitioning: action.immediate !== true,\n            index: 0,\n            routes: [state.routes[0]]\n          });\n        }\n        return state;\n      }\n\n      // Handle replace action\n      if (action.type === _StackActions2.default.REPLACE) {\n        var routeIndex = void 0;\n\n        // If the key param is undefined, set the index to the last route in the stack\n        if (action.key === undefined && state.routes.length) {\n          routeIndex = state.routes.length - 1;\n        } else {\n          routeIndex = state.routes.findIndex(r => r.key === action.key);\n        }\n\n        // Only replace if the key matches one of our routes\n        if (routeIndex !== -1) {\n          var _childRouter3 = childRouters[action.routeName];\n          var childState = {};\n          if (_childRouter3) {\n            var _childAction2 = action.action || _NavigationActions2.default.init({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            });\n            childState = _childRouter3.getStateForAction(_childAction2);\n          }\n          var _routes = [...state.routes];\n          _routes[routeIndex] = _extends({\n            params: getParamsForRouteAndAction(action.routeName, action)\n          }, childState, {\n            routeName: action.routeName,\n            key: action.newKey || (0, _KeyGenerator.generateKey)()\n          });\n          return _extends({}, state, { routes: _routes });\n        }\n      }\n\n      // Update transitioning state\n      if (action.type === _StackActions2.default.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && action.toChildKey === state.routes[state.index].key && state.isTransitioning) {\n        return _extends({}, state, {\n          isTransitioning: false\n        });\n      }\n\n      if (action.type === _NavigationActions2.default.SET_PARAMS) {\n        var key = action.key;\n        var lastRoute = state.routes.find(route => route.key === key);\n        if (lastRoute) {\n          var params = _extends({}, lastRoute.params, action.params);\n          var _routes2 = [...state.routes];\n          _routes2[state.routes.indexOf(lastRoute)] = _extends({}, lastRoute, {\n            params\n          });\n          return _extends({}, state, {\n            routes: _routes2\n          });\n        }\n      }\n\n      if (action.type === _StackActions2.default.RESET) {\n        // Only handle reset actions that are unspecified or match this state key\n        if (action.key != null && action.key != state.key) {\n          // Deliberately use != instead of !== so we can match null with\n          // undefined on either the state or the action\n          return state;\n        }\n        var newStackActions = action.actions;\n\n        return _extends({}, state, {\n          routes: newStackActions.map(newStackAction => {\n            var router = childRouters[newStackAction.routeName];\n\n            var childState = {};\n\n            if (router) {\n              var _childAction3 = newStackAction.action || _NavigationActions2.default.init({\n                params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)\n              });\n\n              childState = router.getStateForAction(_childAction3);\n            }\n\n            return _extends({\n              params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)\n            }, childState, {\n              routeName: newStackAction.routeName,\n              key: newStackAction.key || (0, _KeyGenerator.generateKey)()\n            });\n          }),\n          index: action.index\n        });\n      }\n\n      if (action.type === _NavigationActions2.default.BACK || action.type === _StackActions2.default.POP) {\n        var { key: _key, n, immediate } = action;\n        var backRouteIndex = state.index;\n        if (action.type === _StackActions2.default.POP && n != null) {\n          // determine the index to go back *from*. In this case, n=1 means to go\n          // back from state.index, as if it were a normal \"BACK\" action\n          backRouteIndex = Math.max(1, state.index - n + 1);\n        } else if (_key) {\n          var backRoute = state.routes.find(route => route.key === _key);\n          backRouteIndex = state.routes.indexOf(backRoute);\n        }\n\n        if (backRouteIndex > 0) {\n          return _extends({}, state, {\n            routes: state.routes.slice(0, backRouteIndex),\n            index: backRouteIndex - 1,\n            isTransitioning: immediate !== true\n          });\n        }\n      }\n\n      // By this point in the router's state handling logic, we have handled the behavior of the active route, and handled any stack actions.\n      // If we haven't returned by now, we should allow non-active child routers to handle this action, and switch to that index if the child state (route) does change..\n\n      var keyIndex = action.key ? _StateUtils2.default.indexOf(state, action.key) : -1;\n\n      // Traverse routes from the top of the stack to the bottom, so the\n      // active route has the first opportunity, then the one before it, etc.\n      for (var _childRoute of state.routes.slice().reverse()) {\n        if (_childRoute.key === activeChildRoute.key) {\n          // skip over the active child because we let it attempt to handle the action earlier\n          continue;\n        }\n        // If a key is provided and in routes state then let's use that\n        // knowledge to skip extra getStateForAction calls on other child\n        // routers\n        if (keyIndex >= 0 && _childRoute.key !== action.key) {\n          continue;\n        }\n        var _childRouter4 = childRouters[_childRoute.routeName];\n        if (_childRouter4) {\n          var _route4 = _childRouter4.getStateForAction(action, _childRoute);\n\n          if (_route4 === null) {\n            return state;\n          } else if (_route4 && _route4 !== _childRoute) {\n            return _StateUtils2.default.replaceAt(state, _childRoute.key, _route4,\n            // the following tells replaceAt to NOT change the index to this route for the setParam action or complete transition action,\n            // because people don't expect these actions to switch the active route\n            action.type === _NavigationActions2.default.SET_PARAMS || action.type === _StackActions2.default.COMPLETE_TRANSITION || action.type.includes('DRAWER'));\n          }\n        }\n      }\n\n      return state;\n    },\n\n    getPathAndParamsForState(state) {\n      var route = state.routes[state.index];\n      return getPathAndParamsForRoute(route);\n    },\n\n    getActionForPathAndParams(path, params) {\n      return getActionForPathAndParams(path, params);\n    },\n\n    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, stackConfig.defaultNavigationOptions)\n  };\n};","map":{"mappings":[{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/StackRouter.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}}],"sources":{"node_modules/@react-navigation/core/dist/routers/StackRouter.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _NavigationActions = require('../NavigationActions');\n\nvar _NavigationActions2 = _interopRequireDefault(_NavigationActions);\n\nvar _StackActions = require('./StackActions');\n\nvar _StackActions2 = _interopRequireDefault(_StackActions);\n\nvar _createConfigGetter = require('./createConfigGetter');\n\nvar _createConfigGetter2 = _interopRequireDefault(_createConfigGetter);\n\nvar _getScreenForRouteName = require('./getScreenForRouteName');\n\nvar _getScreenForRouteName2 = _interopRequireDefault(_getScreenForRouteName);\n\nvar _StateUtils = require('../StateUtils');\n\nvar _StateUtils2 = _interopRequireDefault(_StateUtils);\n\nvar _validateRouteConfigMap = require('./validateRouteConfigMap');\n\nvar _validateRouteConfigMap2 = _interopRequireDefault(_validateRouteConfigMap);\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _KeyGenerator = require('./KeyGenerator');\n\nvar _pathUtils = require('./pathUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction behavesLikePushAction(action) {\n  return action.type === _NavigationActions2.default.NAVIGATE || action.type === _StackActions2.default.PUSH;\n}\n\nvar defaultActionCreators = () => ({});\n\nfunction isResetToRootStack(action) {\n  return action.type === _StackActions2.default.RESET && action.key === null;\n}\n\nexports.default = (routeConfigs, stackConfig = {}) => {\n  // Fail fast on invalid route definitions\n  (0, _validateRouteConfigMap2.default)(routeConfigs);\n\n  var childRouters = {};\n  var routeNames = Object.keys(routeConfigs);\n\n  // Loop through routes and find child routers\n  routeNames.forEach(routeName => {\n    var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);\n    if (screen && screen.router) {\n      // If it has a router it's a navigator.\n      childRouters[routeName] = screen.router;\n    } else {\n      // If it doesn't have router it's an ordinary React component.\n      childRouters[routeName] = null;\n    }\n  });\n\n  var { initialRouteParams } = stackConfig;\n  var getCustomActionCreators = stackConfig.getCustomActionCreators || defaultActionCreators;\n\n  var initialRouteName = stackConfig.initialRouteName || routeNames[0];\n\n  var initialChildRouter = childRouters[initialRouteName];\n\n  function getInitialState(action) {\n    var route = {};\n    var childRouter = childRouters[action.routeName];\n\n    // This is a push-like action, and childRouter will be a router or null if we are responsible for this routeName\n    if (behavesLikePushAction(action) && childRouter !== undefined) {\n      var childState = {};\n      // The router is null for normal leaf routes\n      if (childRouter !== null) {\n        var childAction = action.action || _NavigationActions2.default.init({ params: action.params });\n        childState = childRouter.getStateForAction(childAction);\n      }\n\n      return {\n        key: 'StackRouterRoot',\n        isTransitioning: false,\n        index: 0,\n        routes: [_extends({\n          params: action.params\n        }, childState, {\n          key: action.key || (0, _KeyGenerator.generateKey)(),\n          routeName: action.routeName\n        })]\n      };\n    }\n\n    if (initialChildRouter) {\n      route = initialChildRouter.getStateForAction(_NavigationActions2.default.navigate({\n        routeName: initialRouteName,\n        params: initialRouteParams\n      }));\n    }\n    var params = (routeConfigs[initialRouteName].params || route.params || action.params || initialRouteParams) && _extends({}, routeConfigs[initialRouteName].params || {}, route.params || {}, action.params || {}, initialRouteParams || {});\n    var { initialRouteKey } = stackConfig;\n    route = _extends({}, route, params ? { params } : {}, {\n      routeName: initialRouteName,\n      key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()\n    });\n    return {\n      key: 'StackRouterRoot',\n      isTransitioning: false,\n      index: 0,\n      routes: [route]\n    };\n  }\n\n  function getParamsForRouteAndAction(routeName, action) {\n    var routeConfig = routeConfigs[routeName];\n    if (routeConfig && routeConfig.params) {\n      return _extends({}, routeConfig.params, action.params);\n    } else {\n      return action.params;\n    }\n  }\n\n  var {\n    getPathAndParamsForRoute,\n    getActionForPathAndParams\n  } = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, stackConfig);\n\n  return {\n    childRouters,\n\n    getComponentForState(state) {\n      var activeChildRoute = state.routes[state.index];\n      var { routeName } = activeChildRoute;\n      if (childRouters[routeName]) {\n        return childRouters[routeName].getComponentForState(activeChildRoute);\n      }\n      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);\n    },\n\n    getComponentForRouteName(routeName) {\n      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);\n    },\n\n    getActionCreators(route, navStateKey) {\n      return _extends({}, getCustomActionCreators(route, navStateKey), {\n        pop: (n, params) => _StackActions2.default.pop(_extends({\n          n\n        }, params)),\n        popToTop: params => _StackActions2.default.popToTop(params),\n        push: (routeName, params, action) => _StackActions2.default.push({\n          routeName,\n          params,\n          action\n        }),\n        replace: (replaceWith, params, action, newKey) => {\n          if (typeof replaceWith === 'string') {\n            return _StackActions2.default.replace({\n              routeName: replaceWith,\n              params,\n              action,\n              key: route.key,\n              newKey\n            });\n          }\n          (0, _invariant2.default)(typeof replaceWith === 'object', 'Must replaceWith an object or a string');\n          (0, _invariant2.default)(params == null, 'Params must not be provided to .replace() when specifying an object');\n          (0, _invariant2.default)(action == null, 'Child action must not be provided to .replace() when specifying an object');\n          (0, _invariant2.default)(newKey == null, 'Child action must not be provided to .replace() when specifying an object');\n          return _StackActions2.default.replace(replaceWith);\n        },\n        reset: (actions, index) => _StackActions2.default.reset({\n          actions,\n          index: index == null ? actions.length - 1 : index,\n          key: navStateKey\n        }),\n        dismiss: () => _NavigationActions2.default.back({\n          key: navStateKey\n        })\n      });\n    },\n\n    getStateForAction(action, state) {\n      // Set up the initial state if needed\n      if (!state) {\n        return getInitialState(action);\n      }\n\n      var activeChildRoute = state.routes[state.index];\n\n      if (!isResetToRootStack(action) && action.type !== _NavigationActions2.default.NAVIGATE) {\n        // Let the active child router handle the action\n        var activeChildRouter = childRouters[activeChildRoute.routeName];\n        if (activeChildRouter) {\n          var route = activeChildRouter.getStateForAction(action, activeChildRoute);\n          if (route !== null && route !== activeChildRoute) {\n            return _StateUtils2.default.replaceAt(state, activeChildRoute.key, route,\n            // the following tells replaceAt to NOT change the index to this route for the setParam action, because people don't expect param-setting actions to switch the active route\n            action.type === _NavigationActions2.default.SET_PARAMS);\n          }\n        }\n      } else if (action.type === _NavigationActions2.default.NAVIGATE) {\n        // Traverse routes from the top of the stack to the bottom, so the\n        // active route has the first opportunity, then the one before it, etc.\n\n        for (var childRoute of state.routes.slice().reverse()) {\n          var childRouter = childRouters[childRoute.routeName];\n          var childAction = action.routeName === childRoute.routeName && action.action ? action.action : action;\n\n          if (childRouter) {\n            var nextRouteState = childRouter.getStateForAction(childAction, childRoute);\n\n            if (nextRouteState === null || nextRouteState !== childRoute) {\n              var newState = _StateUtils2.default.replaceAndPrune(state, nextRouteState ? nextRouteState.key : childRoute.key, nextRouteState ? nextRouteState : childRoute);\n              return _extends({}, newState, {\n                isTransitioning: state.index !== newState.index ? action.immediate !== true : state.isTransitioning\n              });\n            }\n          }\n        }\n      }\n\n      // Handle push and navigate actions. This must happen after the focused\n      // child router has had a chance to handle the action.\n      if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined // undefined means it's not a childRouter or a screen\n      ) {\n          var _childRouter = childRouters[action.routeName];\n          var _route = void 0;\n\n          (0, _invariant2.default)(action.type !== _StackActions2.default.PUSH || action.key == null, 'StackRouter does not support key on the push action');\n\n          // Before pushing a new route we first try to find one in the existing route stack\n          // More information on this: https://github.com/react-navigation/rfcs/blob/master/text/0004-less-pushy-navigate.md\n          var lastRouteIndex = state.routes.findIndex(r => {\n            if (action.key) {\n              return r.key === action.key;\n            } else {\n              return r.routeName === action.routeName;\n            }\n          });\n\n          // An instance of this route exists already and we're dealing with a navigate action\n          if (action.type !== _StackActions2.default.PUSH && lastRouteIndex !== -1) {\n            // If index is unchanged and params are not being set, leave state identity intact\n            if (state.index === lastRouteIndex && !action.params) {\n              return null;\n            }\n\n            // Remove the now unused routes at the tail of the routes array\n            var routes = state.routes.slice(0, lastRouteIndex + 1);\n\n            // Apply params if provided, otherwise leave route identity intact\n            if (action.params) {\n              var _route2 = state.routes[lastRouteIndex];\n              routes[lastRouteIndex] = _extends({}, _route2, {\n                params: _extends({}, _route2.params, action.params)\n              });\n            }\n            // Return state with new index. Change isTransitioning only if index has changed\n            return _extends({}, state, {\n              isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : state.isTransitioning,\n              index: lastRouteIndex,\n              routes\n            });\n          }\n\n          if (_childRouter) {\n            // Delegate to the child router with the given action, or init it\n            var _childAction = action.action || _NavigationActions2.default.init({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            });\n            _route = _extends({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            }, _childRouter.getStateForAction(_childAction), {\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            });\n          } else {\n            // Create the route from scratch\n            _route = {\n              params: getParamsForRouteAndAction(action.routeName, action),\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            };\n          }\n          return _extends({}, _StateUtils2.default.push(state, _route), {\n            isTransitioning: action.immediate !== true\n          });\n        } else if (action.type === _StackActions2.default.PUSH && childRouters[action.routeName] === undefined) {\n        // Return the state identity to bubble the action up\n        return state;\n      }\n\n      // Handle navigation to other child routers that are not yet pushed\n      if (behavesLikePushAction(action)) {\n        var childRouterNames = Object.keys(childRouters);\n        for (var i = 0; i < childRouterNames.length; i++) {\n          var childRouterName = childRouterNames[i];\n          var _childRouter2 = childRouters[childRouterName];\n          if (_childRouter2) {\n            // For each child router, start with a blank state\n            var initChildRoute = _childRouter2.getStateForAction(_NavigationActions2.default.init());\n            // Then check to see if the router handles our navigate action\n            var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);\n            var routeToPush = null;\n            if (navigatedChildRoute === null) {\n              // Push the route if the router has 'handled' the action and returned null\n              routeToPush = initChildRoute;\n            } else if (navigatedChildRoute !== initChildRoute) {\n              // Push the route if the state has changed in response to this navigation\n              routeToPush = navigatedChildRoute;\n            }\n            if (routeToPush) {\n              var _route3 = _extends({}, routeToPush, {\n                routeName: childRouterName,\n                key: action.key || (0, _KeyGenerator.generateKey)()\n              });\n              return _extends({}, _StateUtils2.default.push(state, _route3), {\n                isTransitioning: action.immediate !== true\n              });\n            }\n          }\n        }\n      }\n\n      // Handle pop-to-top behavior. Make sure this happens after children have had a chance to handle the action, so that the inner stack pops to top first.\n      if (action.type === _StackActions2.default.POP_TO_TOP) {\n        // Refuse to handle pop to top if a key is given that doesn't correspond\n        // to this router\n        if (action.key && state.key !== action.key) {\n          return state;\n        }\n\n        // If we're already at the top, then we return the state with a new\n        // identity so that the action is handled by this router.\n        if (state.index > 0) {\n          return _extends({}, state, {\n            isTransitioning: action.immediate !== true,\n            index: 0,\n            routes: [state.routes[0]]\n          });\n        }\n        return state;\n      }\n\n      // Handle replace action\n      if (action.type === _StackActions2.default.REPLACE) {\n        var routeIndex = void 0;\n\n        // If the key param is undefined, set the index to the last route in the stack\n        if (action.key === undefined && state.routes.length) {\n          routeIndex = state.routes.length - 1;\n        } else {\n          routeIndex = state.routes.findIndex(r => r.key === action.key);\n        }\n\n        // Only replace if the key matches one of our routes\n        if (routeIndex !== -1) {\n          var _childRouter3 = childRouters[action.routeName];\n          var childState = {};\n          if (_childRouter3) {\n            var _childAction2 = action.action || _NavigationActions2.default.init({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            });\n            childState = _childRouter3.getStateForAction(_childAction2);\n          }\n          var _routes = [...state.routes];\n          _routes[routeIndex] = _extends({\n            params: getParamsForRouteAndAction(action.routeName, action)\n          }, childState, {\n            routeName: action.routeName,\n            key: action.newKey || (0, _KeyGenerator.generateKey)()\n          });\n          return _extends({}, state, { routes: _routes });\n        }\n      }\n\n      // Update transitioning state\n      if (action.type === _StackActions2.default.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && action.toChildKey === state.routes[state.index].key && state.isTransitioning) {\n        return _extends({}, state, {\n          isTransitioning: false\n        });\n      }\n\n      if (action.type === _NavigationActions2.default.SET_PARAMS) {\n        var key = action.key;\n        var lastRoute = state.routes.find(route => route.key === key);\n        if (lastRoute) {\n          var params = _extends({}, lastRoute.params, action.params);\n          var _routes2 = [...state.routes];\n          _routes2[state.routes.indexOf(lastRoute)] = _extends({}, lastRoute, {\n            params\n          });\n          return _extends({}, state, {\n            routes: _routes2\n          });\n        }\n      }\n\n      if (action.type === _StackActions2.default.RESET) {\n        // Only handle reset actions that are unspecified or match this state key\n        if (action.key != null && action.key != state.key) {\n          // Deliberately use != instead of !== so we can match null with\n          // undefined on either the state or the action\n          return state;\n        }\n        var newStackActions = action.actions;\n\n        return _extends({}, state, {\n          routes: newStackActions.map(newStackAction => {\n            var router = childRouters[newStackAction.routeName];\n\n            var childState = {};\n\n            if (router) {\n              var _childAction3 = newStackAction.action || _NavigationActions2.default.init({\n                params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)\n              });\n\n              childState = router.getStateForAction(_childAction3);\n            }\n\n            return _extends({\n              params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)\n            }, childState, {\n              routeName: newStackAction.routeName,\n              key: newStackAction.key || (0, _KeyGenerator.generateKey)()\n            });\n          }),\n          index: action.index\n        });\n      }\n\n      if (action.type === _NavigationActions2.default.BACK || action.type === _StackActions2.default.POP) {\n        var { key: _key, n, immediate } = action;\n        var backRouteIndex = state.index;\n        if (action.type === _StackActions2.default.POP && n != null) {\n          // determine the index to go back *from*. In this case, n=1 means to go\n          // back from state.index, as if it were a normal \"BACK\" action\n          backRouteIndex = Math.max(1, state.index - n + 1);\n        } else if (_key) {\n          var backRoute = state.routes.find(route => route.key === _key);\n          backRouteIndex = state.routes.indexOf(backRoute);\n        }\n\n        if (backRouteIndex > 0) {\n          return _extends({}, state, {\n            routes: state.routes.slice(0, backRouteIndex),\n            index: backRouteIndex - 1,\n            isTransitioning: immediate !== true\n          });\n        }\n      }\n\n      // By this point in the router's state handling logic, we have handled the behavior of the active route, and handled any stack actions.\n      // If we haven't returned by now, we should allow non-active child routers to handle this action, and switch to that index if the child state (route) does change..\n\n      var keyIndex = action.key ? _StateUtils2.default.indexOf(state, action.key) : -1;\n\n      // Traverse routes from the top of the stack to the bottom, so the\n      // active route has the first opportunity, then the one before it, etc.\n      for (var _childRoute of state.routes.slice().reverse()) {\n        if (_childRoute.key === activeChildRoute.key) {\n          // skip over the active child because we let it attempt to handle the action earlier\n          continue;\n        }\n        // If a key is provided and in routes state then let's use that\n        // knowledge to skip extra getStateForAction calls on other child\n        // routers\n        if (keyIndex >= 0 && _childRoute.key !== action.key) {\n          continue;\n        }\n        var _childRouter4 = childRouters[_childRoute.routeName];\n        if (_childRouter4) {\n          var _route4 = _childRouter4.getStateForAction(action, _childRoute);\n\n          if (_route4 === null) {\n            return state;\n          } else if (_route4 && _route4 !== _childRoute) {\n            return _StateUtils2.default.replaceAt(state, _childRoute.key, _route4,\n            // the following tells replaceAt to NOT change the index to this route for the setParam action or complete transition action,\n            // because people don't expect these actions to switch the active route\n            action.type === _NavigationActions2.default.SET_PARAMS || action.type === _StackActions2.default.COMPLETE_TRANSITION || action.type.includes('DRAWER'));\n          }\n        }\n      }\n\n      return state;\n    },\n\n    getPathAndParamsForState(state) {\n      var route = state.routes[state.index];\n      return getPathAndParamsForRoute(route);\n    },\n\n    getActionForPathAndParams(path, params) {\n      return getActionForPathAndParams(path, params);\n    },\n\n    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, stackConfig.defaultNavigationOptions)\n  };\n};"},"lineCount":512}},"hash":"2e8ddd03905ecf92517c0574abf612f8","cacheData":{"env":{}}}