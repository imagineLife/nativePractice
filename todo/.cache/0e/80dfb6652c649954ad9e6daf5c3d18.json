{"id":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","dependencies":[{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/package.json","includedInParent":true,"mtime":1550318843000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/.babelrc","includedInParent":true,"mtime":1550318529000},{"name":"/Users/Jake/Desktop/projects/nativePractice/todo/node_modules/@react-navigation/core/package.json","includedInParent":true,"mtime":1549937780000}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar deprecatedKeys = ['tabBar'];\n\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\n\nexports.default = (screenOptions, route) => {\n  var keys = Object.keys(screenOptions);\n\n  var deprecatedKey = keys.find(key => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error([`\\`title\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`, 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error([`\\`${deprecatedKey}\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`, 'Try replacing the following:', '{', `    ${deprecatedKey}: ({ state }) => ({`, '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', `    ${deprecatedKey}Key: navigation.state...`, '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error([`Invalid key \\`${deprecatedKey}\\` defined in navigation options for \\`${route.routeName}\\` screen.`, '\\n', 'Try replacing the following navigation options:', '{', `    ${deprecatedKey}: {`, ...Object.keys(screenOptions[deprecatedKey]).map(key => `        ${key}: ...,`), '    },', '}', '\\n', 'with:', '{', ...Object.keys(screenOptions[deprecatedKey]).map(key => `    ${deprecatedKey + key[0].toUpperCase() + key.slice(1)}: ...,`), '}'].join('\\n'));\n  }\n};","map":{"mappings":[{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/@react-navigation/core/dist/routers/validateScreenOptions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar deprecatedKeys = ['tabBar'];\n\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\n\nexports.default = (screenOptions, route) => {\n  var keys = Object.keys(screenOptions);\n\n  var deprecatedKey = keys.find(key => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error([`\\`title\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`, 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error([`\\`${deprecatedKey}\\` cannot be defined as a function in navigation options for \\`${route.routeName}\\` screen. \\n`, 'Try replacing the following:', '{', `    ${deprecatedKey}: ({ state }) => ({`, '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', `    ${deprecatedKey}Key: navigation.state...`, '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error([`Invalid key \\`${deprecatedKey}\\` defined in navigation options for \\`${route.routeName}\\` screen.`, '\\n', 'Try replacing the following navigation options:', '{', `    ${deprecatedKey}: {`, ...Object.keys(screenOptions[deprecatedKey]).map(key => `        ${key}: ...,`), '    },', '}', '\\n', 'with:', '{', ...Object.keys(screenOptions[deprecatedKey]).map(key => `    ${deprecatedKey + key[0].toUpperCase() + key.slice(1)}: ...,`), '}'].join('\\n'));\n  }\n};"},"lineCount":29}},"hash":"fc2616f68327e0e01d1efca858a0b1f0","cacheData":{"env":{}}}